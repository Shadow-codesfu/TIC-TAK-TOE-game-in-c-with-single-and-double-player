#include <iostream>
#include <cstdlib> // for rand()
#include <ctime>   // for time
using namespace std;

// Game state variables
char board[3][3] = { { '1', '2', '3' },
                     { '4', '5', '6' },
                     { '7', '8', '9' } };

int choice;
int row, column;
char turn = 'X';  // Player 1 is 'X', Player 2 (AI) is 'O'
bool draw = false;
int playerWins = 0;
int aiWins = 0;
int draws = 0;
bool onePlayerMode = false;

void displayBoard() {
    // Display the current board
    cout << "Player [X] vs " << (onePlayerMode ? "AI [O]" : "Player [O]") << endl;
    cout << "---------------------\n";
    cout << "     |     |     \n";
    cout << "  " << board[0][0] << "  |  " << board[0][1] << "  |  " << board[0][2] << endl;
    cout << "_____|_____|_____" << endl;
    cout << "     |     |     \n";
    cout << "  " << board[1][0] << "  |  " << board[1][1] << "  |  " << board[1][2] << endl;
    cout << "_____|_____|_____" << endl;
    cout << "     |     |     \n";
    cout << "  " << board[2][0] << "  |  " << board[2][1] << "  |  " << board[2][2] << endl;
    cout << "     |     |     \n";
}

void playerTurn() {
    // Player move (human)
    cout << "Your turn! Enter a number (1-9): ";
    cin >> choice;

    // Calculate row and column
    row = (choice - 1) / 3;
    column = (choice - 1) % 3;

    // If the cell is already filled, ask again
    if (board[row][column] == 'X' || board[row][column] == 'O') {
        cout << "Sorry, this position is already filled. Please choose another." << endl;
        playerTurn();
    } else {
        // Mark the position with player's symbol ('X')
        board[row][column] = turn;
    }
}

void aiTurn() {
    // AI move (random)
    cout << "AI's turn..." << endl;

    // Seed for random number generation
    srand(time(0));

    // AI chooses a random position
    do {
        choice = rand() % 9 + 1;
        row = (choice - 1) / 3;
        column = (choice - 1) % 3;
    } while (board[row][column] == 'X' || board[row][column] == 'O'); // Ensure the spot is empty

    // Mark the board with AI's symbol ('O')
    board[row][column] = 'O';
}

bool checkWin() {
    // Check rows, columns, and diagonals for a win
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2]) {
            return true;  // Row win
        }
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i]) {
            return true;  // Column win
        }
    }
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2]) {
        return true;  // Diagonal win
    }
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0]) {
        return true;  // Diagonal win
    }
    return false;
}

bool isBoardFull() {
    // Check if the board is full (draw condition)
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] != 'X' && board[i][j] != 'O') {
                return false;  // There's an empty space, so the board isn't full
            }
        }
    }
    return true;  // The board is full
}

void changePlayer() {
    // Switch turn between 'X' and 'O'
    turn = (turn == 'X') ? 'O' : 'X';
}

void playAgain() {
    char choice;
    cout << "Do you want to play again? (y/n): ";
    cin >> choice;
    if (choice == 'y' || choice == 'Y') {
        // Reset the board for the next game
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                board[i][j] = '1' + (i * 3 + j); // Reset to initial values
            }
        }
    } else {
        cout << "Thanks for playing! Final Score:\n";
        cout << "Player [X]: " << playerWins << " Wins\n";
        cout << "AI [O]: " << aiWins << " Wins\n";
        cout << "Draws: " << draws << endl;
    }
}

int main() {
    // Ask if the player wants to play one-player or two-player game
    char mode;
    cout << "Welcome to Tic-Tac-Toe!" << endl;
    cout << "Do you want to play (1) One Player or (2) Two Player? Enter 1 or 2: ";
    cin >> mode;

    if (mode == '1') {
        onePlayerMode = true;
    } else if (mode == '2') {
        onePlayerMode = false;
    } else {
        cout << "Invalid input. Defaulting to Two Player Mode." << endl;
        onePlayerMode = false;
    }

    // Main game loop
    while (true) {
        // Game round loop
        do {
            displayBoard();

            if (turn == 'X') {
                playerTurn();
            } else {
                if (onePlayerMode) {
                    aiTurn();
                } else {
                    playerTurn();  // In Two Player mode, both players take turns manually
                }
            }

            if (checkWin()) {
                displayBoard();
                if (turn == 'X') {
                    cout << "You win!" << endl;
                    playerWins++;
                } else {
                    cout << (onePlayerMode ? "AI wins!" : "Player [O] wins!") << endl;
                    aiWins++;
                }
            } else if (isBoardFull()) {
                displayBoard();
                cout << "It's a draw!" << endl;
                draws++;
            } else {
                changePlayer();
                continue;
            }

            // Ask if they want to play again
            playAgain();

        } while (true); // Keep the game loop going if the player wants to play again

        break;  // Break the main loop if the player chooses to stop
    }

    return 0;
}